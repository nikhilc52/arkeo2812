plot.subtitle = element_text(size = 22, hjust =0, color="black"))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "bottom"))+
theme(legend.title = element_text( size=9), legend.text=element_text(size=9))+
theme(panel.background = element_rect(fill="white", color="white"))+
theme(panel.grid.major = element_line(color="#e3e3e3"))+
theme(legend.background = element_rect(fill="white", color="white"))+
theme(axis.ticks.x = element_line(colour="#e3e3e3"))+
theme(axis.ticks.y = element_line(colour="#e3e3e3"))+
theme(legend.box.background = element_rect(fill="white", color="white"))
greek |>
ggplot()+
geom_point(aes(x=freq_rank, y=count),color="black",shape=20,size=4)+
scale_color_identity()+
labs(
title="Zipf's law in Ancient Greek",
subtitle = "Axes on a log 10 scale"
)+
ylab("Frequency")+
xlab("Rank")+
scale_x_continuous(transform = "log10",n.breaks=6)+
scale_y_continuous(transform = "log10")+
theme_set(theme_gray(base_size = 20, base_family = "EB Garamond" ))+
theme(plot.title = element_text(size = 30, hjust =0, face = "bold",color="black"),
plot.subtitle = element_text(size = 22, hjust =0, color="black"))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "bottom"))+
theme(legend.title = element_text( size=9), legend.text=element_text(size=9))+
theme(panel.background = element_rect(fill="white", color="white"))+
theme(panel.grid.major = element_line(color="#e3e3e3"))+
theme(legend.background = element_rect(fill="white", color="white"))+
theme(axis.ticks.x = element_line(colour="#e3e3e3"))+
theme(axis.ticks.y = element_line(colour="#e3e3e3"))+
theme(legend.box.background = element_rect(fill="white", color="white"))
greek |>
ggplot()+
geom_point(aes(x=freq_rank, y=count),color="black",shape=20,size=4)+
scale_color_identity()+
labs(
title="Zipf's law in Ancient Greek",
subtitle = "Axes on a log 10 scale"
)+
ylab("Frequency")+
xlab("Rank")+
scale_x_continuous(transform = "log10",n.breaks=6)+
scale_y_continuous(transform = "log10",n.breaks=6)+
theme_set(theme_gray(base_size = 20, base_family = "EB Garamond" ))+
theme(plot.title = element_text(size = 30, hjust =0, face = "bold",color="black"),
plot.subtitle = element_text(size = 22, hjust =0, color="black"))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "bottom"))+
theme(legend.title = element_text( size=9), legend.text=element_text(size=9))+
theme(panel.background = element_rect(fill="white", color="white"))+
theme(panel.grid.major = element_line(color="#e3e3e3"))+
theme(legend.background = element_rect(fill="white", color="white"))+
theme(axis.ticks.x = element_line(colour="#e3e3e3"))+
theme(axis.ticks.y = element_line(colour="#e3e3e3"))+
theme(legend.box.background = element_rect(fill="white", color="white"))
data <- readxl::read_xlsx('cherokee.xlsx')
data <- readxl::read_xlsx('cherokee.xlsx')
View(data)
data <- readxl::read_xlsx('cherokee.xlsx')
View(data)
?separate_rows
?seprate_longer_delim
?separate_longer_delim
cleaned <- data |>
select(Cherokee) |>
separate_longer_delim(Cherokee, delim=" ")
View(cleaned)
cherokee <- cleaned |>
group_by(Cherokee) |>
summarise(
count=n(),
word=first(Cherokee)
) |>
mutate(freq_rank = rank(-count,ties.method="min"))
View(cherokee)
cherokee <- cleaned |>
group_by(Cherokee) |>
summarise(
count=n()
) |>
mutate(freq_rank = rank(-count,ties.method="min"))
View(cherokee)
cherokee |>
ggplot()+
geom_point(aes(x=freq_rank, y=count),color="black",shape=20,size=4)+
scale_color_identity()+
labs(
title="Zipf's law in Cherokee",
subtitle = ""
)+
ylab("Frequency")+
xlab("Rank")+
scale_x_continuous(transform = "log10",n.breaks=6)+
scale_y_continuous(transform = "log10",n.breaks=6)+
theme_set(theme_gray(base_size = 20, base_family = "EB Garamond" ))+
theme(plot.title = element_text(size = 30, hjust =0, face = "bold",color="black"),
plot.subtitle = element_text(size = 22, hjust =0, color="black"))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "bottom"))+
theme(legend.title = element_text( size=9), legend.text=element_text(size=9))+
theme(panel.background = element_rect(fill="white", color="white"))+
theme(panel.grid.major = element_line(color="#e3e3e3"))+
theme(legend.background = element_rect(fill="white", color="white"))+
theme(axis.ticks.x = element_line(colour="#e3e3e3"))+
theme(axis.ticks.y = element_line(colour="#e3e3e3"))+
theme(legend.box.background = element_rect(fill="white", color="white"))
?scale_x_continuous
cherokee |>
ggplot()+
geom_point(aes(x=freq_rank, y=count),color="black",shape=20,size=4)+
scale_color_identity()+
labs(
title="Zipf's law in Cherokee",
subtitle = ""
)+
ylab("Frequency")+
xlab("Rank")+
scale_x_continuous(transform = "log10",labels = scales::label_comma(),n.breaks=6)+
scale_y_continuous(transform = "log10",labels = scales::label_comma(),n.breaks=6)+
theme_set(theme_gray(base_size = 20, base_family = "EB Garamond" ))+
theme(plot.title = element_text(size = 30, hjust =0, face = "bold",color="black"),
plot.subtitle = element_text(size = 22, hjust =0, color="black"))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "bottom"))+
theme(legend.title = element_text( size=9), legend.text=element_text(size=9))+
theme(panel.background = element_rect(fill="white", color="white"))+
theme(panel.grid.major = element_line(color="#e3e3e3"))+
theme(legend.background = element_rect(fill="white", color="white"))+
theme(axis.ticks.x = element_line(colour="#e3e3e3"))+
theme(axis.ticks.y = element_line(colour="#e3e3e3"))+
theme(legend.box.background = element_rect(fill="white", color="white"))
file_list <-  c('aeschylus','aretaeus','tryphiodorus')
for (f in file_list) {
print(p)
}
for (f in file_list) {
print(f)
}
paste0('a','a','a')
greek <- data.frame()
?rbind
for (f in file_list) {
data <- read_csv(paste0('greek/',f ,'.csv'))
font_add_google("EB Garamond")
showtext_auto()
cleaned <- data |>
select(contains(c("/lemma/_entry","/lemma/_POS","/lemma/_id"))) |>
mutate(across(everything(), as.character)) |>
pivot_longer(
cols = everything(),
names_to = ".value",
names_pattern = "word/\\d+/lemma/_([a-zA-Z]+)"
) |>
drop_na()
new_greek <- cleaned |>
group_by(id) |>
summarise(
count=n(),
word=first(entry),
POS=first(POS)
) |>
mutate(freq_rank = rank(-count,ties.method="min"))
greek <- rbind(greek, new_greek)
}
View(new_greek)
file_list <-  c('aeschylus','aretaeus','tryphiodorus')
greek <- data.frame()
for (f in file_list) {
data <- read_csv(paste0('greek/',f ,'.csv'))
font_add_google("EB Garamond")
showtext_auto()
cleaned <- data |>
select(contains(c("/lemma/_entry","/lemma/_POS","/lemma/_id"))) |>
mutate(across(everything(), as.character)) |>
pivot_longer(
cols = everything(),
names_to = ".value",
names_pattern = "word/\\d+/lemma/_([a-zA-Z]+)"
) |>
drop_na()
greek <- rbind(greek, cleaned)
}
View(greek)
greek <- data.frame()
for (f in file_list) {
data <- read_csv(paste0('greek/',f ,'.csv'))
font_add_google("EB Garamond")
showtext_auto()
cleaned <- data |>
select(contains(c("/lemma/_entry","/lemma/_POS","/lemma/_id"))) |>
mutate(across(everything(), as.character)) |>
pivot_longer(
cols = everything(),
names_to = ".value",
names_pattern = "word/\\d+/lemma/_([a-zA-Z]+)"
) |>
drop_na()
print(length(cleaned))
greek <- rbind(greek, cleaned)
}
greek <- data.frame()
for (f in file_list) {
data <- read_csv(paste0('greek/',f ,'.csv'))
font_add_google("EB Garamond")
showtext_auto()
cleaned <- data |>
select(contains(c("/lemma/_entry","/lemma/_POS","/lemma/_id"))) |>
mutate(across(everything(), as.character)) |>
pivot_longer(
cols = everything(),
names_to = ".value",
names_pattern = "word/\\d+/lemma/_([a-zA-Z]+)"
) |>
drop_na()
print(nrow(cleaned))
greek <- rbind(greek, cleaned)
}
new_greek <- greek |>
group_by(id) |>
summarise(
count=n(),
word=first(entry),
POS=first(POS)
)
View(new_greek)
new_greek <- greek |>
group_by(id) |>
summarise(
count=n(),
word=first(entry),
POS=first(POS)
) |>
mutate(freq_rank = rank(-count,ties.method="min"))
View(new_greek)
new_greek |>
ggplot()+
geom_point(aes(x=freq_rank, y=count),color="black",shape=20,size=4)+
scale_color_identity()+
labs(
title="Zipf's law in Ancient Greek",
subtitle = ""
)+
ylab("Frequency")+
xlab("Rank")+
scale_x_continuous(transform = "log10",n.breaks=6)+
scale_y_continuous(transform = "log10",n.breaks=6)+
theme_set(theme_gray(base_size = 20, base_family = "EB Garamond" ))+
theme(plot.title = element_text(size = 30, hjust =0, face = "bold",color="black"),
plot.subtitle = element_text(size = 22, hjust =0, color="black"))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "bottom"))+
theme(legend.title = element_text( size=9), legend.text=element_text(size=9))+
theme(panel.background = element_rect(fill="white", color="white"))+
theme(panel.grid.major = element_line(color="#e3e3e3"))+
theme(legend.background = element_rect(fill="white", color="white"))+
theme(axis.ticks.x = element_line(colour="#e3e3e3"))+
theme(axis.ticks.y = element_line(colour="#e3e3e3"))+
theme(legend.box.background = element_rect(fill="white", color="white"))
file_list <-  c('aeschylus','aretaeus','tryphiodorus','demosthenes')
greek <- data.frame()
for (f in file_list) {
data <- read_csv(paste0('greek/',f ,'.csv'))
font_add_google("EB Garamond")
showtext_auto()
cleaned <- data |>
select(contains(c("/lemma/_entry","/lemma/_POS","/lemma/_id"))) |>
mutate(across(everything(), as.character)) |>
pivot_longer(
cols = everything(),
names_to = ".value",
names_pattern = "word/\\d+/lemma/_([a-zA-Z]+)"
) |>
drop_na()
greek <- rbind(greek, cleaned)
}
file_list <-  c('aeschylus','aretaeus','tryphiodorus','demosthenes')
greek <- data.frame()
for (f in file_list) {
data <- read_csv(paste0('greek/',f ,'.csv'), show_col_types = FALSE)
print(paste0('Read in: ', f))
font_add_google("EB Garamond")
showtext_auto()
cleaned <- data |>
select(contains(c("/lemma/_entry","/lemma/_POS","/lemma/_id"))) |>
mutate(across(everything(), as.character)) |>
pivot_longer(
cols = everything(),
names_to = ".value",
names_pattern = "word/\\d+/lemma/_([a-zA-Z]+)"
) |>
drop_na()
greek <- rbind(greek, cleaned)
print('Added data')
}
file_list <-  c('aeschylus','aretaeus','tryphiodorus','demosthenes')
greek <- data.frame()
for (f in file_list) {
data <- read_csv(paste0('greek/',f ,'.csv'), show_col_types = FALSE)
print(paste0('Read in: ', f))
font_add_google("EB Garamond")
showtext_auto()
cleaned <- data |>
select(contains(c("/lemma/_entry","/lemma/_POS","/lemma/_id"))) |>
mutate(across(everything(), as.character)) |>
pivot_longer(
cols = everything(),
names_to = ".value",
names_pattern = "word/\\d+/lemma/_([a-zA-Z]+)"
) |>
drop_na()
greek <- rbind(greek, cleaned)
print(paste0('Added ',nrow(cleaned),' (non-unique) words of data'))
}
new_greek <- greek |>
group_by(id) |>
summarise(
count=n(),
word=first(entry),
POS=first(POS)
) |>
mutate(freq_rank = rank(-count,ties.method="min"))
new_greek |>
ggplot()+
geom_point(aes(x=freq_rank, y=count),color="black",shape=20,size=4)+
scale_color_identity()+
labs(
title="Zipf's law in Ancient Greek",
subtitle = ""
)+
ylab("Frequency")+
xlab("Rank")+
scale_x_continuous(transform = "log10",n.breaks=6)+
scale_y_continuous(transform = "log10",n.breaks=6)+
theme_set(theme_gray(base_size = 20, base_family = "EB Garamond" ))+
theme(plot.title = element_text(size = 30, hjust =0, face = "bold",color="black"),
plot.subtitle = element_text(size = 22, hjust =0, color="black"))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "bottom"))+
theme(legend.title = element_text( size=9), legend.text=element_text(size=9))+
theme(panel.background = element_rect(fill="white", color="white"))+
theme(panel.grid.major = element_line(color="#e3e3e3"))+
theme(legend.background = element_rect(fill="white", color="white"))+
theme(axis.ticks.x = element_line(colour="#e3e3e3"))+
theme(axis.ticks.y = element_line(colour="#e3e3e3"))+
theme(legend.box.background = element_rect(fill="white", color="white"))
View(new_greek)
library(tidyverse)
library(ggthemes)
library(ggrepel)
library(dplyr)
library(showtext)
file_list <-  c('aeschylus','aretaeus','tryphiodorus')
greek <- data.frame()
for (f in file_list) {
data <- read_csv(paste0('greek/',f ,'.csv'), show_col_types = FALSE)
print(paste0('Read in: ', f))
font_add_google("EB Garamond")
showtext_auto()
cleaned <- data |>
select(contains(c("/lemma/_entry","/lemma/_POS","/lemma/_id"))) |>
mutate(across(everything(), as.character)) |>
pivot_longer(
cols = everything(),
names_to = ".value",
names_pattern = "word/\\d+/lemma/_([a-zA-Z]+)"
) |>
drop_na()
greek <- rbind(greek, cleaned)
print(paste0('Added ',nrow(cleaned),' (non-unique) words of data'))
}
new_greek <- greek |>
group_by(id) |>
summarise(
count=n(),
word=first(entry),
POS=first(POS)
) |>
mutate(freq_rank = rank(-count,ties.method="min"))
new_greek |>
ggplot()+
geom_point(aes(x=freq_rank, y=count),color="black",shape=20,size=4)+
scale_color_identity()+
labs(
title="Zipf's law in Ancient Greek",
subtitle = ""
)+
ylab("Frequency")+
xlab("Rank")+
scale_x_continuous(transform = "log10",n.breaks=6)+
scale_y_continuous(transform = "log10",n.breaks=6)+
theme_set(theme_gray(base_size = 20, base_family = "EB Garamond" ))+
theme(plot.title = element_text(size = 30, hjust =0, face = "bold",color="black"),
plot.subtitle = element_text(size = 22, hjust =0, color="black"))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "bottom"))+
theme(legend.title = element_text( size=9), legend.text=element_text(size=9))+
theme(panel.background = element_rect(fill="white", color="white"))+
theme(panel.grid.major = element_line(color="#e3e3e3"))+
theme(legend.background = element_rect(fill="white", color="white"))+
theme(axis.ticks.x = element_line(colour="#e3e3e3"))+
theme(axis.ticks.y = element_line(colour="#e3e3e3"))+
theme(legend.box.background = element_rect(fill="white", color="white"))
library(tidyverse)
library(ggthemes)
library(ggrepel)
library(dplyr)
library(showtext)
file_list <-  c('aeschylus','aretaeus','tryphiodorus','demosthenes')
greek <- data.frame()
for (f in file_list) {
data <- read_csv(paste0('greek/',f ,'.csv'), show_col_types = FALSE)
print(paste0('Read in: ', f))
font_add_google("EB Garamond")
showtext_auto()
cleaned <- data |>
select(contains(c("/lemma/_entry","/lemma/_POS","/lemma/_id"))) |>
mutate(across(everything(), as.character)) |>
pivot_longer(
cols = everything(),
names_to = ".value",
names_pattern = "word/\\d+/lemma/_([a-zA-Z]+)"
) |>
drop_na()
greek <- rbind(greek, cleaned)
print(paste0('Added ',nrow(cleaned),' (non-unique) words of data'))
}
new_greek <- greek |>
group_by(id) |>
summarise(
count=n(),
word=first(entry),
POS=first(POS)
) |>
mutate(freq_rank = rank(-count,ties.method="min"))
new_greek |>
ggplot()+
geom_point(aes(x=freq_rank, y=count),color="black",shape=20,size=4)+
scale_color_identity()+
labs(
title="Zipf's law in Ancient Greek",
subtitle = ""
)+
ylab("Frequency")+
xlab("Rank")+
scale_x_continuous(transform = "log10",n.breaks=6)+
scale_y_continuous(transform = "log10",n.breaks=6)+
theme_set(theme_gray(base_size = 20, base_family = "EB Garamond" ))+
theme(plot.title = element_text(size = 30, hjust =0, face = "bold",color="black"),
plot.subtitle = element_text(size = 22, hjust =0, color="black"))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "bottom"))+
theme(legend.title = element_text( size=9), legend.text=element_text(size=9))+
theme(panel.background = element_rect(fill="white", color="white"))+
theme(panel.grid.major = element_line(color="#e3e3e3"))+
theme(legend.background = element_rect(fill="white", color="white"))+
theme(axis.ticks.x = element_line(colour="#e3e3e3"))+
theme(axis.ticks.y = element_line(colour="#e3e3e3"))+
theme(legend.box.background = element_rect(fill="white", color="white"))
library(tidyverse)
library(ggthemes)
library(ggrepel)
library(dplyr)
library(showtext)
data <- readxl::read_xlsx('cherokee/cherokee.xlsx')
font_add_google("EB Garamond")
showtext_auto()
cleaned <- data |>
select(Cherokee) |>
separate_longer_delim(Cherokee, delim=" ")
cherokee <- cleaned |>
group_by(Cherokee) |>
summarise(
count=n()
) |>
mutate(freq_rank = rank(-count,ties.method="min"))
cherokee |>
ggplot()+
geom_point(aes(x=freq_rank, y=count),color="black",shape=20,size=4)+
scale_color_identity()+
labs(
title="Zipf's law in Cherokee",
subtitle = ""
)+
ylab("Frequency")+
xlab("Rank")+
scale_x_continuous(transform = "log10",labels = scales::label_comma(),n.breaks=6)+
scale_y_continuous(transform = "log10",labels = scales::label_comma(),n.breaks=6)+
theme_set(theme_gray(base_size = 20, base_family = "EB Garamond" ))+
theme(plot.title = element_text(size = 30, hjust =0, face = "bold",color="black"),
plot.subtitle = element_text(size = 22, hjust =0, color="black"))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "bottom"))+
theme(legend.title = element_text( size=9), legend.text=element_text(size=9))+
theme(panel.background = element_rect(fill="white", color="white"))+
theme(panel.grid.major = element_line(color="#e3e3e3"))+
theme(legend.background = element_rect(fill="white", color="white"))+
theme(axis.ticks.x = element_line(colour="#e3e3e3"))+
theme(axis.ticks.y = element_line(colour="#e3e3e3"))+
theme(legend.box.background = element_rect(fill="white", color="white"))
